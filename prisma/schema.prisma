// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        Int      @id @default(autoincrement())
  publicId  String?
  username  String   @unique
  email     String   @unique
  password  String
  photo     String?
  createdAt DateTime @default(now())

  session Session[]
  list    List[]
  label   Label[]

  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("sessions")
}

model List {
  id         Int      @id @default(autoincrement())
  userId     Int
  name       String
  icon       String
  isFavorite Boolean  @default(false)
  createdAt  DateTime @default(now())

  user        User          @relation(fields: [userId], references: [id])
  task        Task[]
  labelOnList LabelOnList[]

  @@map("lists")
}

model LabelOnList {
  id        Int      @id @default(autoincrement())
  listId    Int
  labelId   Int
  createdAt DateTime @default(now())

  list  List  @relation(fields: [listId], references: [id])
  label Label @relation(fields: [labelId], references: [id])

  @@map("label_on_list")
}

model Task {
  id             Int       @id @default(autoincrement())
  listId         Int
  name           String
  isChecked      Boolean   @default(false)
  priority       Int
  dateToComplete DateTime?
  createdAt      DateTime  @default(now())

  list List @relation(fields: [listId], references: [id])

  @@map("tasks")
}

model Label {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  createdAt DateTime @default(now())

  user        User          @relation(fields: [userId], references: [id])
  labelOnList LabelOnList[]

  @@map("labels")
}
